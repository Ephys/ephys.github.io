{"componentChunkName":"component---src-pages-index-tsx","path":"/","result":{"data":{"aboutMe":{"html":"<h2>Who am I?</h2>\n<p>Hi I'm <strong>Guylian</strong></p>\n<p>I'm a deeply <strong>passionate developer</strong> who continuously strives to be better at both who I am and what I'm doing.</p>\n<p>I strive to do my part in creating a <strong>fast</strong>, and <strong>accessible</strong> World Wide Web.<br>\nI really enjoy finding new, automated, optimizations to make my apps faster.</p>\n<p>Currently, my language of predilection is <strong>JavaScript</strong>. I am also very enthusiast about other\nweb technologies such as the DOM, HTML, CSS and the gazillion of other specs.</p>\n<p>I love discovering new technologies and keeping myself <strong>up to date</strong> with (and sometimes a bit ahead of)\nthe tech of our industry by actively reading (and writing too!) the TC39 (ECMAScript), WHATWG (HTML), and W3C (CSS) githubs and mailing lists.\nI love the open source community and <a href=\"https://github.com/Ephys\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">try to give back when I can</a>.</p>\n<p>I've worked on and with community-produced tech such as <strong>React, Webpack, SCSS, PostCSS, Babel, Gatsby, PHP, Wordpress, PostgreSQL, MySQL</strong> (others too but they're not as used anymore).</p>"},"experience":{"nodes":[{"html":"<p>At MAD Kings</p>","meta":{"start":"2016-07","end":null,"title":"MAD Kings"}},{"html":"<p>Pictawall was a SaaS platform that provided dynamic displays for User Generated Content to events and websites.</p>\n<p>During my time at Pictawall, I worked on implementing and optimizing the website integration of the platform.<br>\nIt had to provide numerous different layouts and be highly flexible and configurable, while still loading extremely fast.</p>\n<p>It was an extremely fun experience which allowed me to research and apply new techniques for optimization and modularization. </p>","meta":{"start":"2016-02","end":"2016-07","title":"Pictawall"}}]},"projects":{"nodes":[{"html":"<p>Did you know that there is a browser quirk that can cause dom properties to become inaccessible?<br>\nFor instance, if you were to name an <code>&#x3C;input></code> tag \"className\", the <code>className</code> DOM property of the form that owns the property\nwill start to return the input instead of the actual className. Madness! Gotta love browser quirks.</p>\n<p>With a little bit of black magic, I wrote this library as the ultimate way to bypass this bug. (But honestly, just rename your input)</p>\n<p>I've explained the details of this insanity in more details on <a href=\"https://www.npmjs.com/package/@madkings/dom-unoverride\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">the project page</a></p>","meta":{"year":2018,"title":"dom-unoverride","repository":"https://github.com/Ephys/dom-unoverride","npm":"https://www.npmjs.com/package/@madkings/dom-unoverride","active":false,"demo":null}},{"html":"<p>I wanted to add support for dotenv files in joi-config-generator, and wanted to learn how to parse non-trivial file formats. So I wrote a naÃ¯ve parser! </p>","meta":{"year":2018,"title":"dotenv parser/serializer","repository":"https://github.com/Ephys/dotenv-parser-serializer","npm":"https://www.npmjs.com/package/dotenv-parser-serializer","active":false,"demo":null}},{"html":"<p><em>This project is now inactive as it has been included natively in react-intl ðŸŽ‰ðŸŽ‰</em></p>\n<p>My biggest issue with react-intl <del>is</del> <ins>was</ins> how complex it <del>is</del> <ins>was</ins> to insert tags in one of their formatted message. Especially when they become nested.\nTo solve this issue, I wrote a library that <strong>replaces XML tags, found inside the formatted message, with React components</strong> or elements.\nIt does so before any user variable is injected into the formatted message, to avoid XSS.</p>","meta":{"year":2018,"title":"react-intl-formatted-xml-message","repository":"https://github.com/Ephys/react-intl-formatted-xml-message","npm":"https://www.npmjs.com/package/react-intl-formatted-xml-message","active":false,"demo":null}},{"html":"<p>The gender unicorn is a website created for the <a href=\"http://www.transstudent.org/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><abbr title=\"Trans Student Educational Resources\">TSER</abbr></a>.\nIt is a recreation of their <a href=\"http://www.transstudent.org/gender\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Gender Unicorn infographic</a> as an interactive, printable, and mobile friendly version.</p>\n<p>This project was incredibly fun, and a great opportunity to learn how to adapt a design for a different medium,\nwhile trying to stay true to the source material. </p>","meta":{"year":2016,"title":"The gender unicorn","repository":"https://github.com/Ephys/Gender-Unicorn","npm":null,"active":true,"demo":"https://guylian.me/Gender-Unicorn/"}},{"html":"<p> It is my opinion that one of the biggest pain point when joining a project is filling in the configuration files of the project as they're often very cryptic and/or provide little to no information on what is needed.</p>\n<p>This work in progress library is an attempt to solve that issue by letting the application declare exactly what it needs, using <a href=\"https://github.com/hapijs/joi\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Joi</a>. </p>","meta":{"year":2018,"title":"Joi Config Generator","repository":"https://github.com/madkingsag/joi-config-generator","npm":"https://www.npmjs.com/package/joi-config-generator","active":true,"demo":null}},{"html":"<p>During my time at Pictawall, I had to write a masonry wall that had to reload when the style of the page changed,\nas the layout would break otherwise.<br>\nThe best way to do this at the time (in 2016), was to detect stylesheet changes and cause a re-render.</p>\n<p>Detecting such a thing was unsurprisingly extremely inconsistent between browsers at the time (likely still is), so\nI decided to write a library that handled just that, which is how <a href=\"https://www.npmjs.com/package/stylesheet-observer\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">StyleSheet Observer</a> was born.</p>","meta":{"year":2016,"title":"StyleSheet Observer","repository":"https://github.com/foobarhq/stylesheer-observer","npm":"https://www.npmjs.com/package/stylesheet-observer","active":false,"demo":null}}]}},"pageContext":{}}}